// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/smartdashboard/SmartDashboard.h"
#include "Commands/ArmDown.h"
#include "Commands/ArmHomeUpTimed.h"
#include "Commands/ArmManual.h"
#include "Commands/ArmUp.h"
#include "Commands/ClawClose.h"
#include "Commands/ClawOpen.h"
#include "Commands/ClawPunch.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/ElevatorDown.h"
#include "Commands/ElevatorHomeUpTimed.h"
#include "Commands/ElevatorManual.h"
#include "Commands/ElevatorUp.h"
#include "Commands/HighCargo.h"
#include "Commands/HighHatch.h"
#include "Commands/Home.h"
#include "Commands/LimelightOff.h"
#include "Commands/LimelightTrack.h"
#include "Commands/LowCargo.h"
#include "Commands/LowHatch.h"
#include "Commands/MedHatch.h"
#include "Commands/MidCargo.h"
#include "Commands/PuncherIn.h"
#include "Commands/PuncherOutTimed.h"
#include "Commands/WristMove.h"
#include "Commands/WristStart.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    systemsController.reset(new frc::Joystick(1));
    
    start.reset(new frc::JoystickButton(systemsController.get(), 8));
    start->WhenPressed(new HighHatch());
    rJoyBn.reset(new frc::JoystickButton(systemsController.get(), 10));
    rJoyBn->WhenPressed(new ClawClose());
    lJoyBn.reset(new frc::JoystickButton(systemsController.get(), 9));
    lJoyBn->WhenPressed(new ClawPunch());
    rBump.reset(new frc::JoystickButton(systemsController.get(), 6));
    rBump->WhenPressed(new HighCargo());
    a.reset(new frc::JoystickButton(systemsController.get(), 1));
    a->WhenPressed(new LowHatch());
    b.reset(new frc::JoystickButton(systemsController.get(), 2));
    b->WhenPressed(new LowCargo());
    x.reset(new frc::JoystickButton(systemsController.get(), 3));
    x->WhenPressed(new MedHatch());
    y.reset(new frc::JoystickButton(systemsController.get(), 4));
    y->WhenPressed(new MidCargo());
    driveController.reset(new frc::Joystick(0));
    
    dRBump.reset(new frc::JoystickButton(driveController.get(), 6));
    dRBump->WhileHeld(new LimelightTrack());

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("ClawPunch", new ClawPunch());
    frc::SmartDashboard::PutData("Home", new Home());
    frc::SmartDashboard::PutData("HighCargo", new HighCargo());
    frc::SmartDashboard::PutData("HighHatch", new HighHatch());
    frc::SmartDashboard::PutData("MidCargo", new MidCargo());
    frc::SmartDashboard::PutData("MedHatch", new MedHatch());
    frc::SmartDashboard::PutData("LowCargo", new LowCargo());
    frc::SmartDashboard::PutData("LowHatch", new LowHatch());
    frc::SmartDashboard::PutData("ArmDown", new ArmDown());
    frc::SmartDashboard::PutData("ElevatorDown", new ElevatorDown());
    frc::SmartDashboard::PutData("LimelightOff", new LimelightOff());
    frc::SmartDashboard::PutData("LimelightTrack", new LimelightTrack());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

   lBump.reset(new frc::JoystickButton(systemsController.get(), 5));

   lBump->ToggleWhenPressed(new WristMove(Robot::wrist->UP));
   lBump->ToggleWhenPressed(new WristMove(Robot::wrist->DOWN));

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getDriveController() {
   return driveController;
}

std::shared_ptr<frc::Joystick> OI::getSystemsController() {
   return systemsController;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
