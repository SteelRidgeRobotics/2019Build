// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVETRAIN_H
#define DRIVETRAIN_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"
#include "ctre/Phoenix.h"
#include "frc/smartdashboard/Smartdashboard.h"




/**
 *
 *
 * @author ExampleAuthor
 */
class DriveTrain: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<WPI_TalonSRX> frontLeft;
	std::shared_ptr<WPI_TalonSRX> frontRight;

	//THESE NEED TO BE COMMENTED OUT WHEN USING PRACTICE ROBOT!
	//std::shared_ptr<WPI_VictorSPX> backLeft;
	//std::shared_ptr<WPI_VictorSPX> backRight;
	
	//THESE NEED TO BE UNCOMMENTED WHEN USING PRACTICE ROBOT!
	std::shared_ptr<WPI_TalonSRX> backLeft;
	std::shared_ptr<WPI_TalonSRX> backRight;

	std::shared_ptr<frc::SpeedControllerGroup> leftside;
	std::shared_ptr<frc::SpeedControllerGroup> rightside;

	std::shared_ptr<frc::DifferentialDrive> limelightdrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

public:
	DriveTrain();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS



	void userDrive(std::shared_ptr<frc::Joystick>DriveController);

	void limelightAuto(double move, double turn);

	void setInvert(bool left_bool, bool right_bool);

	void stopMotors();

	void initMotors();
	
};

#endif
